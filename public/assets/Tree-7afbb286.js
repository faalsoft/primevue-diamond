import{r as a,o as f,a as r,b as y,c as p,d as t,f as o,g as _,h as j}from"./index-c4f39c8f.js";class C{getFiles(){return fetch("/demo/data/files.json",{headers:{"Cache-Control":"no-cache"}}).then(e=>e.json()).then(e=>e.data)}getLazyFiles(){return fetch("/demo/data/files-lazy.json",{headers:{"Cache-Control":"no-cache"}}).then(e=>e.json()).then(e=>e.data)}getFilesystem(){return fetch("/demo/data/filesystem.json",{headers:{"Cache-Control":"no-cache"}}).then(e=>e.json()).then(e=>e.data)}getLazyFilesystem(){return fetch("/demo/data/filesystem-lazy.json",{headers:{"Cache-Control":"no-cache"}}).then(e=>e.json()).then(e=>e.data)}getTreeTableNodes(){return fetch("/demo/data/treetablenodes.json").then(e=>e.json()).then(e=>e.root)}getTreeNodes(){return fetch("/demo/data/treenodes.json").then(e=>e.json()).then(e=>e.root)}}const b={class:"grid"},g={class:"col-12"},N={class:"card"},x=t("h5",null,"Tree",-1),V={class:"col-12"},z={class:"card"},K=t("h5",null,"TreeTable",-1),k={__name:"Tree",setup(m){const e=a(null),d=a(null),h=a(null),i=a(null),u=new C;return f(()=>{u.getTreeNodes().then(s=>e.value=s),u.getTreeTableNodes().then(s=>h.value=s)}),(s,n)=>{const T=r("Tree",!0),l=r("Column"),v=r("TreeTable");return y(),p("div",b,[t("div",g,[t("div",N,[x,o(T,{value:e.value,selectionMode:"checkbox",selectionKeys:d.value,"onUpdate:selectionKeys":n[0]||(n[0]=c=>d.value=c)},null,8,["value","selectionKeys"])])]),t("div",V,[t("div",z,[K,o(v,{value:h.value,selectionMode:"checkbox",selectionKeys:i.value,"onUpdate:selectionKeys":n[1]||(n[1]=c=>i.value=c)},{header:_(()=>[j(" FileSystem ")]),default:_(()=>[o(l,{field:"name",header:"Name",expander:!0}),o(l,{field:"size",header:"Size"}),o(l,{field:"type",header:"Type"})]),_:1},8,["value","selectionKeys"])])])])}}};export{k as default};
